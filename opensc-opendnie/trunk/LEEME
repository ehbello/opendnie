Desarrollo desde cero de un nuevo driver OpenSC del DNI electrónico
con licencia LGPL para su incorporación al proyecto OpenSC

Autor(es)
Juan Antonio Martínez jonsito @ terra . es

Exposición de motivos
---------------------------------------------------

La Dirección General de la Policía y la Guardia Civil, publicó
en su día el código fuente correspondiente al driver OpenSC DNIe

Debido a la licencia GPL con que se publicó dicho código fuente,
y al deseo expreso manifestado por la DGPGC de que dicho código
fuera utilizado como "implementación de referencia" denegando
su re-licenciamiento como LGPL se hace imposible su integración 
en el proyecto OpenSC

Con la publicación del "Manual de Comandos del DNI electrónico",
y especialmente de las claves para el establecimiento del canal
seguro, se hace finalmente posible el desarrollo de un driver
para su integración en OpenSC, con una licencia compatible con
dicho proyecto

Este código se está realizando pues desde cero: no contiene ni
una sola línea tomada de los fuentes publicados por la DGP.
Por contra, se han re-utilizado las ideas y código expuestos
en los multiples drivers que componen el proyecto OpenSC

En muchos puntos, el código publicado por la DGP difiere de
las instrucciones publicadas en el Manual de Comandos: en estos
casos se han seguido las instrucciones del Manual, haciéndose
notar en todo momento las divergencias y erratas detectadas

El código está profusamente documentado. Se indican en todo momento
las fuentes del código y los motivos para realizar una u otra 
implementación.

INSTRUCCIONES DE INTALACION Y COMPILACION
---------------------------------------------------

IMPORTANTE: La implementación presentada no es todavía funcional
 simplemente es un "just compile". 
Los puntos pendientes de desarrollo están indicados en el código

El repositorio incluye un subdirectorio src/libopensc con los
ficheros "card-dnie.c" "sm-dnie.c" y "dnie.h". Estos ficheros ya están
incluídos en el parche que se indica en las instrucciones, por lo que 
no es necesario su uso, salvo para desarrollo y consulta del fuente

0 - Requisitos previos

- Tener un sistema Linux con el entorno de desarrollo C instalado

- Tener instalados los paquetes (los nombres pueden variar en
función de la distribución):

* build-essential / pkgconfig / autoconf / automake / docbook-xsl
* subversion
* pcsc-lite / pcscd
* pcsc-lite-devel / libpcsclite-dev
* pcsc-tools
* readline
* readline-devel
* openct-devel (recomendable)
* openssl
* openssl-devel / libssl-dev / libglobus-openssl-dev
* libtool
* libtool-ltdl-devel
* libccid 
* libassuan
* libassuan-devel

1 - Crear un directorio de trabajo

bash$ mkdir workspace
bash$ cd workspace

2- Descargar el código del repositorio de Cenatic

bash$ svn checkout https://svn.forge.morfeo-project.org/opendnie/opensc-opendnie/trunk

3- Preparar el entorno de compilación, generando los ficheros auxiliares necesarios

bash$ ./bootstrap

4- Compilar e instalar

bash$ ./configure
bash$ make
bash$ sudo make install

4a- En el caso de distribuciones linux Fedora (y posiblemente otras), 
las opciones extras para que "configure" instale en los directorios 
standard son:

./configure --prefix=/usr \
        --sysconfdir=/etc \
        --datadir=/usr/share \
        --infodir=/usr/share/info \
        --mandir=/usr/share/man

5- Esta versión no genera un fichero /usr/lib/libopensc-dnie.so, sino que
el driver DNIe está integrado dentro de /usr/lib/libopensc.so

6- Una vez instalada, será necesario instalar los certificados de la DGP,
módulo pkcs#11 en Firefox/Mozilla, etc siguiendo los procedimientos
habituales descritos en la Web http://www.dnielectronico.es

7- Nota sobre "pinentry"

En función de la distribución de Linux, es posible que la aplicación
"/usr/bin/pinentry" no esté instalada o tenga distinto nombre
Para obviar este problema, será necesario editar el fichero de
configuración /etc/opensc.conf.

Para ello se busca y edita la entrada:
....
        # card_driver dnie {
        #       # Enable/Disable user consent on signing (default: enable)
        #       user_consent_enabled = true;
        #       # Program to be used for ask confirmation (default: pinentry)
        #       user_consent_app = /usr/bin/pinentry;
        # }
....
Se descomenta dicha entrada, y se ajusta el valor de user_consent_app al
correspondiente a nuestro sistema

