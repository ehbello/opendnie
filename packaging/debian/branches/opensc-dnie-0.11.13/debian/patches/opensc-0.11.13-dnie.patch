Index: opensc-dnie-0.11.13/configure.ac
===================================================================
--- opensc-dnie-0.11.13.orig/configure.ac	2010-02-16 09:03:28.000000000 +0000
+++ opensc-dnie-0.11.13/configure.ac	2010-11-27 14:02:51.504474001 +0000
@@ -7,7 +7,7 @@
 define([PACKAGE_VERSION_FIX], [13])
 define([PACKAGE_SUFFIX], [])
 
-AC_INIT([opensc],[PACKAGE_VERSION_MAJOR.PACKAGE_VERSION_MINOR.PACKAGE_VERSION_FIX[]PACKAGE_SUFFIX])
+AC_INIT([opensc-dnie],[PACKAGE_VERSION_MAJOR.PACKAGE_VERSION_MINOR.PACKAGE_VERSION_FIX[]PACKAGE_SUFFIX])
 AC_CONFIG_AUX_DIR([.])
 AC_CONFIG_HEADERS([config.h])
 AC_CONFIG_MACRO_DIR([m4])
@@ -595,16 +595,25 @@
 	fi
 	AC_DEFINE_UNQUOTED([DEFAULT_PCSC_PROVIDER], ["${DEFAULT_PCSC_PROVIDER}"], [Default PC/SC provider])
 	AC_DEFINE([ENABLE_PCSC], [1], [Define if PC/SC is to be enabled])
+        # check version
+        if `pkg-config --atleast-version=1.6.2 libpcsclite`; then
+            AC_DEFINE([PCSC_162],[1], [Define if PC/SC version>=1.6.2])
+        fi 
 fi
 
 dnl AM_PATH_LIBASSUAN([MINIMUM-VERSION,
 dnl                   [ACTION-IF-FOUND [, ACTION-IF-NOT-FOUND ]]])
 dnl Test for libassuan and define LIBASSUAN_CFLAGS and LIBASSUAN_LIBS
 AM_PATH_LIBASSUAN(
-	,
+	[1.0.0],
 	[have_assuan="yes"], 
 	[have_assuan="no"]
 )
+if test "x${have_assuan}" != "xyes"; then
+        AC_MSG_ERROR([assuan is needed for opensc-dgp])
+else
+        AC_DEFINE([HAVE_LIBASSUAN],[1],[Define if you have ASSUAN libraries and header files])
+fi
 
 if test "${enable_nsplugin}" = "yes"; then
 	if test "x${have_assuan}" != "xyes" -o "x${have_openssl}" != "xyes"; then
@@ -715,6 +724,7 @@
 	src/include/winconfig.h
 	src/include/opensc/Makefile
 	src/libopensc/Makefile
+	src/libopensc/dnie/Makefile
 	src/libopensc/opensc-config
 	src/libopensc/libopensc.pc
 	src/libopensc/libpkcs15init.pc
Index: opensc-dnie-0.11.13/src/libopensc/cards.h
===================================================================
--- opensc-dnie-0.11.13.orig/src/libopensc/cards.h	2010-02-16 09:03:28.000000000 +0000
+++ opensc-dnie-0.11.13/src/libopensc/cards.h	2010-11-27 14:02:27.944474001 +0000
@@ -150,6 +150,12 @@
 	/* MyEID cards */
 	SC_CARD_TYPE_MYEID_BASE = 20000,
 	SC_CARD_TYPE_MYEID_GENERIC,
+
+        /* Spanish DNIe card */
+        SC_CARD_TYPE_DNIE_BASE = 21000,
+        SC_CARD_TYPE_DNIE_ADMIN,
+        SC_CARD_TYPE_DNIE_USER,
+        SC_CARD_TYPE_DNIE_TERMINATED,
 };
 
 extern sc_card_driver_t *sc_get_default_driver(void);
@@ -180,6 +186,7 @@
 extern sc_card_driver_t *sc_get_rtecp_driver(void);
 extern sc_card_driver_t *sc_get_westcos_driver(void);
 extern sc_card_driver_t *sc_get_myeid_driver(void);
+extern sc_card_driver_t *sc_get_dnie_driver(void);
 
 #ifdef __cplusplus
 }
Index: opensc-dnie-0.11.13/src/libopensc/reader-pcsc.c
===================================================================
--- opensc-dnie-0.11.13.orig/src/libopensc/reader-pcsc.c	2010-02-16 09:03:28.000000000 +0000
+++ opensc-dnie-0.11.13/src/libopensc/reader-pcsc.c	2010-11-27 14:02:27.944474001 +0000
@@ -80,7 +80,11 @@
 
 struct pcsc_slot_data {
 	SCARDHANDLE pcsc_card;
+#ifdef PCSC_162
+	SCARD_READERSTATE reader_state;
+#else
 	SCARD_READERSTATE_A reader_state;
+#endif
 	DWORD verify_ioctl;
 	DWORD verify_ioctl_start;
 	DWORD verify_ioctl_finish;
@@ -353,7 +357,11 @@
 	sc_context_t *ctx;
 	SCARDCONTEXT pcsc_ctx;
 	LONG ret;
+#ifdef PCSC_162
+	SCARD_READERSTATE rgReaderStates[SC_MAX_READERS];
+#else
 	SCARD_READERSTATE_A rgReaderStates[SC_MAX_READERS];
+#endif
 	unsigned long on_bits, off_bits;
 	time_t end_time, now, delta;
 	size_t i;
@@ -401,7 +409,11 @@
 	/* Wait for a status change and return if it's a card insert/removal
 	 */
 	for( ; ; ) {
+#ifdef PCSC_162
+		SCARD_READERSTATE *rsp;
+#else
 		SCARD_READERSTATE_A *rsp;
+#endif
 
 		/* Scan the current state of all readers to see if they
 		 * match any of the events we're polling for */
Index: opensc-dnie-0.11.13/src/libopensc/internal-winscard.h
===================================================================
--- opensc-dnie-0.11.13.orig/src/libopensc/internal-winscard.h	2010-02-16 09:03:28.000000000 +0000
+++ opensc-dnie-0.11.13/src/libopensc/internal-winscard.h	2010-11-27 14:02:27.944474001 +0000
@@ -112,8 +112,13 @@
 typedef LONG (PCSC_API *SCardEndTransaction_t)(SCARDHANDLE hCard, DWORD dwDisposition);
 typedef LONG (PCSC_API *SCardStatus_t)(SCARDHANDLE hCard, LPSTR mszReaderNames, LPDWORD pcchReaderLen,
 	LPDWORD pdwState, LPDWORD pdwProtocol, LPBYTE pbAtr, LPDWORD pcbAtrLen);
+#ifdef PCSC_162
+typedef LONG (PCSC_API *SCardGetStatusChange_t)(SCARDCONTEXT hContext, DWORD dwTimeout,
+	LPSCARD_READERSTATE rgReaderStates, DWORD cReaders);
+#else
 typedef LONG (PCSC_API *SCardGetStatusChange_t)(SCARDCONTEXT hContext, DWORD dwTimeout,
 	LPSCARD_READERSTATE_A rgReaderStates, DWORD cReaders);
+#endif
 typedef LONG (PCSC_API *SCardControlOLD_t)(SCARDHANDLE hCard, LPCVOID pbSendBuffer, DWORD cbSendLength,
 	LPVOID pbRecvBuffer, LPDWORD lpBytesReturned);
 typedef LONG (PCSC_API *SCardControl_t)(SCARDHANDLE hCard, DWORD dwControlCode, LPCVOID pbSendBuffer,
Index: opensc-dnie-0.11.13/src/libopensc/ctx.c
===================================================================
--- opensc-dnie-0.11.13.orig/src/libopensc/ctx.c	2010-02-16 09:03:28.000000000 +0000
+++ opensc-dnie-0.11.13/src/libopensc/ctx.c	2010-11-27 14:02:27.944474001 +0000
@@ -86,6 +86,7 @@
 	{ "rutoken_ecp",(void *(*)(void)) sc_get_rtecp_driver },
 	{ "westcos",	(void *(*)(void)) sc_get_westcos_driver },
         { "myeid",      (void *(*)(void)) sc_get_myeid_driver },
+        { "dnie",       (void *(*)(void)) sc_get_dnie_driver },
 	/* emv is not really used, not sure if it works, but it conflicts with
            muscle and rutoken driver, thus has to be after them */
 	{ "emv",	(void *(*)(void)) sc_get_emv_driver },
Index: opensc-dnie-0.11.13/src/libopensc/Makefile.am
===================================================================
--- opensc-dnie-0.11.13.orig/src/libopensc/Makefile.am	2010-02-16 09:03:28.000000000 +0000
+++ opensc-dnie-0.11.13/src/libopensc/Makefile.am	2010-11-27 14:02:27.944474001 +0000
@@ -4,6 +4,7 @@
 	$(srcdir)/Makefile.in $(srcdir)/versioninfo.rc
 CLEANFILES = versioninfo.rc
 EXTRA_DIST = Makefile.mak 
+SUBDIRS = dnie
 
 bin_SCRIPTS = opensc-config
 lib_LTLIBRARIES = libopensc.la
@@ -57,7 +58,8 @@
 libopensc_la_LIBADD = $(OPTIONAL_OPENSSL_LIBS) $(OPTIONAL_OPENCT_LIBS) \
 	$(OPTIONAL_ZLIB_LIBS) $(OPTIONAL_ICONV_LIBS) $(LTLIB_LIBS) \
 	$(top_builddir)/src/scconf/libscconf.la \
-	$(top_builddir)/src/common/libcompat.la
+	$(top_builddir)/src/common/libcompat.la \
+	$(top_builddir)/src/libopensc/dnie/libdniecard.la
 if WIN32
 libopensc_la_LIBADD += -lws2_32
 endif
Index: opensc-dnie-0.11.13/etc/opensc.conf.in
===================================================================
--- opensc-dnie-0.11.13.orig/etc/opensc.conf.in	2010-02-16 09:03:28.000000000 +0000
+++ opensc-dnie-0.11.13/etc/opensc.conf.in	2010-11-27 14:02:27.954474001 +0000
@@ -75,7 +75,7 @@
 		
 		# Connect to reader in exclusive mode.
 		# Default: false
-		# connect_exclusive = true;
+		connect_exclusive = true;
 		#
 		# Reset the card after disconnect.
 		# Default: true
@@ -129,6 +129,14 @@
 		# The location of the driver library
 		# module = /usr/lib/opensc/drivers/card_customcos.so;
 	# }
+       
+        # Special configuration data for dnie card driver
+        # card_driver dnie {
+        #       # Enable/Disable user consent on signing (default: enable)
+        #       user_consent_enabled = true;
+        #       # Program to be used for ask confirmation (default: pinentry)
+        #       user_consent_app = /usr/bin/pinentry;
+        # }
 
 	# Force using specific card driver
 	#
